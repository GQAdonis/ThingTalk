(set-logic QF_ALL_SUPPORTED)
(set-option :strings-exp true)
(declare-datatypes () ((Enum_0 (Enum_0.on) (Enum_0.off))))
(declare-datatypes () ((Location (loc.home) (loc.work) (loc.current_location) (loc.absolute (loc.lat Real) (loc.lon Real)))))
(declare-datatypes () ((Entity_tt_contact (mk.Entity_tt_contact (Entity_tt_contact.get String)))))
(declare-datatypes () ((Entity_tt_contact_group (mk.Entity_tt_contact_group (Entity_tt_contact_group.get String)))))
(declare-fun Entity_tt_contact.getGroups (Entity_tt_contact) (Set Entity_tt_contact_group))
(declare-fun Allowed___dyn_0_receive_0 () Bool)
(declare-fun param___dyn_0_receive_0___principal () Entity_tt_contact)
(declare-datatypes () ((Entity_tt_flow_token (mk.Entity_tt_flow_token (Entity_tt_flow_token.get String)))))
(declare-fun param___dyn_0_receive_0___token () Entity_tt_flow_token)
(declare-datatypes () ((Entity_tt_function (mk.Entity_tt_function (Entity_tt_function.get String)))))
(declare-fun param___dyn_0_receive_0___kindChannel () Entity_tt_function)
(declare-fun param___dyn_0_receive_0_v () Enum_0)
(declare-fun Allowed_lg_webos_tv_set_power_1 () Bool)
(declare-fun param_lg_webos_tv_set_power_1_power () Enum_0)
(declare-fun pi () Entity_tt_contact)
(declare-fun prog_v_v_0 () Enum_0)
(assert (= (Entity_tt_contact.getGroups (mk.Entity_tt_contact "omlet-messaging:testtesttest")) (insert (mk.Entity_tt_contact_group "role:mom") (singleton (mk.Entity_tt_contact_group "omlet-feed:family")))))
(assert (= pi (mk.Entity_tt_contact "omlet-messaging:testtesttest")))
(assert (= param___dyn_0_receive_0___principal (mk.Entity_tt_contact "omlet-messaging:testtesttest")))
(assert (= param___dyn_0_receive_0___token (mk.Entity_tt_flow_token "123456789")))
(assert (= param___dyn_0_receive_0___kindChannel (mk.Entity_tt_function "")))
(assert true)
(assert (= prog_v_v_0 param___dyn_0_receive_0_v))
(assert (= param_lg_webos_tv_set_power_1_power prog_v_v_0))
(assert true)
(check-sat)
